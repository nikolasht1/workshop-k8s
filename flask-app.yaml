---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: flask-app
data:
  mysql-password: "ZGV2b3BzCg=="
  mysql-root-password: "bXktc2VjcmV0LXB3Cg=="
--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-config
  namespace: flask-app
data:
  flask-name: flask-app
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: flask-pv-claim
  labels:
    name: flask-pv
  namespace: flask-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: flask-app
  labels:
    name: flask-app
  namespace: flask-app
spec:
  containers:
    - name: flask-app
      image: niolasht1/flaskapi
      imagePullPolicy: Always
      command: ["python"]
      args: ["-m", "flask", "run"]
      env:
        - name: FLASK_APP
          value: api.py
        - name: FLASK_ENV
          value: development
        - name: DB_USERNAME
          value: devops
        - name: DB_NAME
          value: mysql
        - name: DB_HOSTNAME
          value: mysql
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
      resources:
        limits:
          memory: "256Mi"
          cpu: "300m"
        requests:
          memory: "256Mi"
          cpu: "200m"
      ports:
        - containerPort: 5000
          name: flask
      startupProbe:
        httpGet:
          path: /api/health-check/ok
          port: flask
        failureThreshold: 5
        periodSeconds: 3
      readinessProbe:
        httpGet:
          path: /api/health-check/ok
          port: flask
        failureThreshold: 5
        periodSeconds: 3
      volumeMounts:
        - name: flask-persistent-storage
          mountPath: /flask/app
  volumes:
    - name: flask-persistent-storage
      persistentVolumeClaim:
        claimName: flask-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: flask-app
spec:
  selector:
    name: flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: flask
      name: flask-svc